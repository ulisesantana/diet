{"version":3,"sources":["assets/drinks.jpg","assets/meat.jpg","assets/oil-fat.jpg","assets/embutidos.jpg","assets/sea.jpg","assets/verduras.jpg","assets/lacteos.jpg","assets/dulces.jpg","assets/frutos-secos.jpg","types.ts","utils.ts","components/Nav.tsx","entities/Category.ts","entities/Ingredient.ts","components/App/data.ts","components/IngredientsList.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Frequency","CategoryID","isMobile","window","innerWidth","Nav","withStyles","theme","root","color","height","indicator","top","flexContainer","backgroundColor","palette","primary","main","stickToBottom","bottom","position","width","zIndex","_ref","value","onChange","classes","react_default","a","createElement","index_es","className","concat","indicatorColor","textColor","variant","label","Category","id","image","Object","classCallCheck","this","Ingredient","frequency","category","favorite","v4","categories","AceitesYGrasasSolidas","aceitesPicture","Bebidas","bebidasPicture","Carnes","carnesPicture","Embutidos","embutidosPicture","DelMar","delMarPicture","DeLaTierra","deLaTierraPicture","Lacteos","lacteosPicture","Dulces","dulcesPicture","FrutosSecos","frutosSecosPicture","ingredients","daily","never","weekly","reduce","acc","ing","objectSpread","defineProperty","IngredientsList","card","margin","maxHeight","media","objectFit","img","length","component","title","gutterBottom","map","i","join","getIngredientsByCategoryAndFrequency","freq","values","filter","swipe","defineSwipe","swipeDistance","swipeHandler","direction","section","setSection","console","log","App","padding","_ref2","_useState","useState","_useState2","slicedToArray","onSwipeLeft","onSwipeRight","e","index","lib","config","container","justify","alignItems","spacing","_ref3","key","_ref4","_ref5","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","ReactDOM","render","styles","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1cb7b42b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drinks.de62427c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meat.5c276377.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oil-fat.1b72105d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/embutidos.eb5c6ca5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sea.fd090630.jpg\";","module.exports = __webpack_public_path__ + \"static/media/verduras.b2dacee4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lacteos.87d42a4b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dulces.81cc6282.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frutos-secos.4c9864b1.jpg\";","export enum Frequency {\n  daily,\n  weekly,\n  never\n}\n\nexport enum CategoryID {\n  Carnes,\n  Embutidos,\n  DelMar,\n  AceitesYGrasasSolidas,\n  DeLaTierra,\n  Lacteos,\n  Dulces,\n  FrutosSecos,\n  Bebidas\n}\n\nexport interface ICategory {\n  id: CategoryID,\n  label: string,\n  image: string\n}\n\nexport interface IIngredient {\n  id: string\n  label: string,\n  frequency: Frequency,\n  category: CategoryID,\n  favorite: boolean\n}\n\nexport type Ingredients = Record<string, IIngredient>","export const isMobile = () => window.innerWidth < 768;","import {Tab, Tabs, Theme, withStyles} from \"@material-ui/core\";\nimport React, {ChangeEvent} from \"react\";\nimport {isMobile} from \"../utils\";\n\nexport interface NavProps {\n  classes: Record<\"stickToBottom\" | \"root\" | \"indicator\" | \"flexContainer\", string>,\n  onChange: (e: ChangeEvent<{}>, index: number) => void\n  value: number,\n}\n\nconst styles = (theme: Theme) => ({\n  root: {\n    color: 'white',\n    height: '60px'\n  },\n  indicator: {\n    top: \"0\"\n  },\n  flexContainer: {\n    backgroundColor: theme.palette.primary.main\n  },\n  stickToBottom: {\n    bottom: 0,\n    position: \"fixed\" as \"sticky\",\n    width: '100%',\n    zIndex: 1000\n  }\n});\n\nexport const Nav = withStyles(styles)(({value, onChange, classes}: NavProps) => (\n    <Tabs\n      className={`${classes.root} ${classes.flexContainer} ${isMobile() ? classes.stickToBottom : ''}`}\n      indicatorColor=\"secondary\"\n      onChange={onChange}\n      textColor=\"secondary\"\n      value={value}\n      variant=\"fullWidth\"\n    >\n      <Tab className={`${classes.root} ${classes.indicator}`} label=\"Diariamente\"/>\n      <Tab className={`${classes.root} ${classes.indicator}`} label=\"Semanalmente\"/>\n      <Tab className={`${classes.root} ${classes.indicator}`} label=\"Nunca\"/>\n    </Tabs>\n  )\n);","import {CategoryID, ICategory} from \"../types\";\n\nexport class Category implements ICategory {\n  public id: CategoryID;\n  public label: string;\n  public image: string;\n\n  constructor(id: CategoryID, label: string, image: string) {\n    this.id = id;\n    this.label = label;\n    this.image = image;\n  }\n}","import {CategoryID, Frequency, IIngredient} from \"../types\";\nimport {v4} from 'uuid';\n\nexport class Ingredient implements IIngredient {\n  public id: string;\n  public favorite: boolean;\n\n  constructor(\n    public label: string,\n    public frequency: Frequency,\n    public category: CategoryID,\n    ) {\n    this.id = v4();\n    this.favorite = false;\n  }\n}","import { Category, Ingredient } from \"../../entities\";\nimport { CategoryID, Frequency, Ingredients } from \"../../types\";\n\nimport bebidasPicture from '../../assets/drinks.jpg';\nimport carnesPicture from '../../assets/meat.jpg';\nimport aceitesPicture from '../../assets/oil-fat.jpg';\nimport embutidosPicture from '../../assets/embutidos.jpg';\nimport delMarPicture from '../../assets/sea.jpg';\nimport deLaTierraPicture from '../../assets/verduras.jpg';\nimport lacteosPicture from '../../assets/lacteos.jpg';\nimport dulcesPicture from '../../assets/dulces.jpg';\nimport frutosSecosPicture from '../../assets/frutos-secos.jpg';\n\nexport const categories: Category[] = [\n  new Category(CategoryID.AceitesYGrasasSolidas, \"Aceites y grasas sólidas\", aceitesPicture),\n  new Category(CategoryID.Bebidas, \"Bebidas\", bebidasPicture),\n  new Category(CategoryID.Carnes, \"Carnes\", carnesPicture),\n  new Category(CategoryID.Embutidos, \"Embutidos\", embutidosPicture),\n  new Category(CategoryID.DelMar, \"Del mar\", delMarPicture),\n  new Category(CategoryID.DeLaTierra, \"Del la tierra\", deLaTierraPicture),\n  new Category(CategoryID.Lacteos, \"Lácteos\", lacteosPicture),\n  new Category(CategoryID.Dulces, \"Dulces\", dulcesPicture),\n  new Category(CategoryID.FrutosSecos, \"Frutos Secos\", frutosSecosPicture)\n];\n\nexport const ingredients: Ingredients = [\n  new Ingredient(\"Pollo\", Frequency.daily, CategoryID.Carnes),\n  new Ingredient(\"Pavo\", Frequency.daily, CategoryID.Carnes),\n  new Ingredient(\"Ternera\", Frequency.daily, CategoryID.Carnes),\n  new Ingredient(\"Huevo\", Frequency.daily, CategoryID.Carnes),\n  new Ingredient(\"Carnes grasas\", Frequency.never, CategoryID.Carnes),\n  new Ingredient(\"Cerdo\", Frequency.never, CategoryID.Carnes),\n  new Ingredient(\"Cordero\", Frequency.never, CategoryID.Carnes),\n\n  new Ingredient(\"Pavo\", Frequency.daily, CategoryID.Embutidos),\n  new Ingredient(\"Pollo\", Frequency.daily, CategoryID.Embutidos),\n  new Ingredient(\"Jamón\", Frequency.weekly, CategoryID.Embutidos),\n  new Ingredient(\"Embutidos grasos\", Frequency.never, CategoryID.Embutidos),\n  new Ingredient(\"Bacon\", Frequency.never, CategoryID.Embutidos),\n  new Ingredient(\"Salami\", Frequency.never, CategoryID.Embutidos),\n  new Ingredient(\"Mortadela\", Frequency.never, CategoryID.Embutidos),\n\n  new Ingredient(\"Lenguado\", Frequency.daily, CategoryID.DelMar),\n  new Ingredient(\"Gallo\", Frequency.daily, CategoryID.DelMar),\n  new Ingredient(\"Merluza\", Frequency.daily, CategoryID.DelMar),\n  new Ingredient(\"Bacalao\", Frequency.daily, CategoryID.DelMar),\n  new Ingredient(\"Pescado Blanco\", Frequency.daily, CategoryID.DelMar),\n  new Ingredient(\"Sardinas\", Frequency.weekly, CategoryID.DelMar),\n  new Ingredient(\"Anchoas\", Frequency.weekly, CategoryID.DelMar),\n  new Ingredient(\"Boquerones\", Frequency.weekly, CategoryID.DelMar),\n  new Ingredient(\"Salmón\", Frequency.weekly, CategoryID.DelMar),\n  new Ingredient(\"Rodaballo\", Frequency.weekly, CategoryID.DelMar),\n  new Ingredient(\"Pescado Azul\", Frequency.weekly, CategoryID.DelMar),\n  new Ingredient(\"Huevas de pescado\", Frequency.never, CategoryID.DelMar),\n  new Ingredient(\"Gambas\", Frequency.never, CategoryID.DelMar),\n  new Ingredient(\"Langostinos\", Frequency.never, CategoryID.DelMar),\n  new Ingredient(\"Cangrejo\", Frequency.never, CategoryID.DelMar),\n  new Ingredient(\"Marisco\", Frequency.never, CategoryID.DelMar),\n\n  new Ingredient(\"Aceite de oliva (preferentemente)\", Frequency.daily, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Aceite de semillas\", Frequency.daily, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Aceite de girasol\", Frequency.daily, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Aceite de maíz\", Frequency.daily, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Manteca de cerdo\", Frequency.never, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Sebo\", Frequency.never, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Tocino\", Frequency.never, CategoryID.AceitesYGrasasSolidas),\n  new Ingredient(\"Nata\", Frequency.never, CategoryID.AceitesYGrasasSolidas),\n\n  new Ingredient(\"Todo tipo de verduras excepto las que se mencionan en otras secciones\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Todo tipo de especias\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Harina\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Arroz\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Sémola\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Pasta\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Germen de trigo\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Salvado de trigo\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Papas\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Pan\", Frequency.daily, CategoryID.DeLaTierra),\n  new Ingredient(\"Espárragos\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Champiñones\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Setas\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Puerros\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Rábanos\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Espinacas\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Coliflor\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Guisantes\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Habas\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Tomates\", Frequency.weekly, CategoryID.DeLaTierra),\n  new Ingredient(\"Legumbres\", Frequency.weekly, CategoryID.DeLaTierra),\n\n  new Ingredient(\"Leche desnatada\", Frequency.daily, CategoryID.Lacteos),\n  new Ingredient(\"Yogur\", Frequency.daily, CategoryID.Lacteos),\n  new Ingredient(\"Quesos no grasos\", Frequency.daily, CategoryID.Lacteos),\n  new Ingredient(\"Leche Entera\", Frequency.weekly, CategoryID.Lacteos),\n  new Ingredient(\"Natillas\", Frequency.weekly, CategoryID.Lacteos),\n  new Ingredient(\"Cuajada\", Frequency.weekly, CategoryID.Lacteos),\n  new Ingredient(\"Quesos grasos\", Frequency.never, CategoryID.Lacteos),\n\n  new Ingredient(\"Galletas integrales\", Frequency.daily, CategoryID.Dulces),\n  new Ingredient(\"Tartas\", Frequency.weekly, CategoryID.Dulces),\n  new Ingredient(\"Hojaldres\", Frequency.weekly, CategoryID.Dulces),\n  new Ingredient(\"Pastelería Industrial\", Frequency.weekly, CategoryID.Dulces),\n  new Ingredient(\"Azúcar refinado\", Frequency.weekly, CategoryID.Dulces),\n  new Ingredient(\"Miel\", Frequency.weekly, CategoryID.Dulces),\n  new Ingredient(\"Fructosa\", Frequency.weekly, CategoryID.Dulces),\n  new Ingredient(\"Chocolate\", Frequency.weekly, CategoryID.Dulces),\n\n  new Ingredient(\"Todo tipo de fruto seco crudo, excepto cacahuete\", Frequency.daily, CategoryID.FrutosSecos),\n  new Ingredient(\"Cacahuete\", Frequency.weekly, CategoryID.FrutosSecos),\n  new Ingredient(\"Frutos secos fritos\", Frequency.weekly, CategoryID.FrutosSecos),\n\n  new Ingredient(\"Té\", Frequency.daily, CategoryID.Bebidas),\n  new Ingredient(\"Café\", Frequency.daily, CategoryID.Bebidas),\n  new Ingredient(\"Infusiones\", Frequency.daily, CategoryID.Bebidas),\n  new Ingredient(\"Zumos naturales\", Frequency.daily, CategoryID.Bebidas),\n  new Ingredient(\"Agua mineral\", Frequency.daily, CategoryID.Bebidas),\n  new Ingredient(\"Agua mineral con gas\", Frequency.daily, CategoryID.Bebidas),\n  new Ingredient(\"Alcohol\", Frequency.never, CategoryID.Bebidas),\n\n\n].reduce((acc, ing: Ingredient) => ({ ...acc, [ing.id]: ing }), {});\n","import React from \"react\";\nimport {Ingredient} from \"../entities\";\nimport {Card, CardActionArea, CardContent, CardMedia, Typography, withStyles} from \"@material-ui/core\";\n\ninterface IItemList {\n  category: string,\n  classes: Record<\"card\" | \"media\", string>,\n  img: string,\n  ingredients: Ingredient[]\n}\n\nconst styles = {\n  card: {\n    margin: '8px',\n    maxHeight: 375,\n    width: 300,\n  },\n  media: {\n    objectFit: 'cover' as \"scale-down\",\n    maxHeight: 125\n  },\n};\n\nexport const IngredientsList = withStyles(styles)(({category, classes, ingredients, img}: IItemList) => {\n    return !!ingredients.length\n      ? (<Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            className={classes.media}\n            image={img}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {category}\n            </Typography>\n            <Typography component=\"p\">\n              {ingredients.map(i => i.label).join(', ').concat('.')}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>)\n      : <div></div>;\n  }\n);","import React, {ChangeEvent, useState} from \"react\";\nimport {Grid, withStyles} from \"@material-ui/core\";\nimport {Nav} from \"../Nav\";\nimport {ingredients, categories} from \"./data\";\nimport {IngredientsList} from \"../IngredientsList\";\nimport {CategoryID, Frequency} from \"../../types\";\nimport {isMobile} from \"../../utils\";\nimport {defineSwipe, Swipeable} from \"react-touch\";\n\nconst getIngredientsByCategoryAndFrequency = (\n  id: CategoryID,\n  freq: Frequency\n) =>\n  Object.values(ingredients).filter(\n    ({category, frequency}) => category === id && frequency === freq\n  );\n\nconst swipe = defineSwipe({swipeDistance: 20});\nfunction swipeHandler(direction: string, section: number, setSection: Function){\n  return () => {\n    console.log('Swiping to ', direction);\n    if (direction === 'right') {\n      section > 0 && setSection(section - 1);\n    } else {\n      section < 2 && setSection(section + 1);\n    }\n  }\n}\n\nconst style = {\n  root: {\n    padding: '16px 0 76px 0'\n  }\n};\n\nexport const App = withStyles(style)(({classes}: {classes: Record<'root', string>}) => {\n  const [section, setSection] = useState(0);\n  const onSwipeLeft = swipeHandler('left', section, setSection);\n  const onSwipeRight = swipeHandler('right', section, setSection);\n  const onChangeSection = (e: ChangeEvent<{}>, index: number) => {\n    setSection(index);\n  };\n\n  return (\n    <Grid>\n      <Nav value={section} onChange={onChangeSection}/>\n      <Swipeable\n          config={swipe}\n          onSwipeLeft={onSwipeLeft}\n          onSwipeRight={onSwipeRight}>\n        <Grid\n          container\n          className={isMobile() ? classes.root : ''}\n          direction={isMobile() ? \"column\" : \"row\"}\n          justify={isMobile() ? \"space-between\" : \"flex-start\"}\n          alignItems={isMobile() ? \"center\" : \"flex-start\"}\n          spacing={8}\n        >\n          {section === 0 &&\n          categories.map(({id, label, image}) => (\n            <IngredientsList\n              key={id}\n              category={label}\n              img={image}\n              ingredients={getIngredientsByCategoryAndFrequency(\n                id,\n                Frequency.daily\n              )}\n            />\n          ))}\n          {section === 1 &&\n          categories.map(({id, label, image}) => (\n            <IngredientsList\n              key={id}\n              category={label}\n              img={image}\n              ingredients={getIngredientsByCategoryAndFrequency(\n                id,\n                Frequency.weekly\n              )}\n            />\n          ))}\n          {section === 2 &&\n          categories.map(({id, label, image}) => (\n            <IngredientsList\n              key={id}\n              category={label}\n              img={image}\n              ingredients={getIngredientsByCategoryAndFrequency(\n                id,\n                Frequency.never\n              )}\n            />\n          ))}\n        </Grid>\n      </Swipeable>\n    </Grid>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#524aac',\n      main: '#19227c',\n      dark: '#00004f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff6434',\n      main: '#dd2c00',\n      dark: '#a30000',\n      contrastText: '#fff',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n  <App />\n</MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}